//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoI_Libreria.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoIEntities1 : DbContext
    {
        public ProyectoIEntities1()
            : base("name=ProyectoIEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Libros> Libros { get; set; }
        public virtual DbSet<Personas> Personas { get; set; }
        public virtual DbSet<Prestamos> Prestamos { get; set; }
    
        public virtual int InsertarLibro(string iSBN, string titulo, string casaEditorial, Nullable<int> numeroEdicion, string autor, Nullable<int> cantidadDisponible)
        {
            var iSBNParameter = iSBN != null ?
                new ObjectParameter("ISBN", iSBN) :
                new ObjectParameter("ISBN", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var casaEditorialParameter = casaEditorial != null ?
                new ObjectParameter("CasaEditorial", casaEditorial) :
                new ObjectParameter("CasaEditorial", typeof(string));
    
            var numeroEdicionParameter = numeroEdicion.HasValue ?
                new ObjectParameter("NumeroEdicion", numeroEdicion) :
                new ObjectParameter("NumeroEdicion", typeof(int));
    
            var autorParameter = autor != null ?
                new ObjectParameter("Autor", autor) :
                new ObjectParameter("Autor", typeof(string));
    
            var cantidadDisponibleParameter = cantidadDisponible.HasValue ?
                new ObjectParameter("CantidadDisponible", cantidadDisponible) :
                new ObjectParameter("CantidadDisponible", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarLibro", iSBNParameter, tituloParameter, casaEditorialParameter, numeroEdicionParameter, autorParameter, cantidadDisponibleParameter);
        }
    
        public virtual int InsertarSocio(string cedulaIdentidad, string nombre, string apellidos, Nullable<System.DateTime> fechaRegistro, Nullable<bool> estado)
        {
            var cedulaIdentidadParameter = cedulaIdentidad != null ?
                new ObjectParameter("CedulaIdentidad", cedulaIdentidad) :
                new ObjectParameter("CedulaIdentidad", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarSocio", cedulaIdentidadParameter, nombreParameter, apellidosParameter, fechaRegistroParameter, estadoParameter);
        }
    
        public virtual int PrestarLibro(Nullable<int> idPersona, Nullable<int> idLibro, Nullable<System.DateTime> fechaPrestamo, ObjectParameter fechaDevolucion)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            var fechaPrestamoParameter = fechaPrestamo.HasValue ?
                new ObjectParameter("FechaPrestamo", fechaPrestamo) :
                new ObjectParameter("FechaPrestamo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrestarLibro", idPersonaParameter, idLibroParameter, fechaPrestamoParameter, fechaDevolucion);
        }
    }
}
